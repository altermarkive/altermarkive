---
apiVersion: v1
kind: Namespace
metadata:
  name: examplefargatenamespace
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: aws-credentials
  namespace: examplefargatenamespace
data:
  aws_secret_access_key: {{ .Values.aws_secret_access_key | quote }}
  aws_access_key_id: {{ .Values.aws_access_key_id | quote }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: examplefargatenamespace
  name: exampledeployment
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: exampleapp
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: exampleapp
    spec:
      containers:
      - image: "{{ .Values.image_uri }}:{{ .Values.image_tag }}"
        imagePullPolicy: Always
        name: exampleapp
        env:
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: aws_secret_access_key
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: aws_access_key_id
          - name: AWS_DEFAULT_REGION
            value: {{ .Values.aws_default_region | quote }}
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: examplefargatenamespace
  name: exampleservice
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: exampleapp
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: examplefargatenamespace
  name: exampleingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: exampleservice
              servicePort: 80
